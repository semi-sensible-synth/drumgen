from array import array

# Euclidean patterns
euclidean_patterns = array('I', [
    0x00000000, 0x80000000, 0x80008000, 0x80808080, 0x88080808, 0x88088088, 0x88888888, 0x92492492,
    0x00000000, 0x80000000, 0x80008000, 0x80808080, 0x88080808, 0x88088088, 0x88888888, 0x92492492,
    0x00000000, 0x80000000, 0x80008000, 0x80808080, 0x88080808, 0x88088088, 0x88888888, 0x92492492,
    0x00000000, 0x80000000, 0x80008000, 0x80808080, 0x88080808, 0x88088088, 0x88888888, 0x92492492,
    0x00000000, 0x80000000, 0x84004000, 0x84208410, 0x88220811, 0x89124889, 0x91248891, 0x92492492,
    0x00000000, 0x80000000, 0x82002000, 0x88082080, 0x88822080, 0x90909088, 0x92249249, 0x94924924,
    0x00000000, 0x80000000, 0x80008000, 0x84008400, 0x88084808, 0x90089008, 0x92289228, 0x94489448,
    0x00000000, 0x80000000, 0x80040000, 0x82082080, 0x88084808, 0x88888808, 0x92288888, 0x92488888,
    0x00000000, 0x80000000, 0x80008000, 0x80808080, 0x84084084, 0x88088808, 0x90090909, 0x92492492,
    0x00000000, 0x80000000, 0x80008000, 0x80808080, 0x84084084, 0x88088808, 0x90090909, 0x92492492,
    0x00000000, 0x80000000, 0x80020000, 0x82008200, 0x88022088, 0x88888222, 0x90909090, 0x92492492,
    0x00000000, 0x80000000, 0x80100010, 0x84104104, 0x88888410, 0x90909090, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x80808080, 0x84848484, 0x88888888, 0x90909090, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x82000000, 0x88000800, 0x88888000, 0x90909088, 0x92492490, 0x94924924,
    0x00000000, 0x80000000, 0x82000000, 0x88000800, 0x88888000, 0x90909088, 0x92492490, 0x94924924,
    0x00000000, 0x80000000, 0x84000000, 0x88200820, 0x88888220, 0x90909090, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x88000000, 0x88880880, 0x88888888, 0x90909090, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x88000000, 0x88880880, 0x88888888, 0x90909090, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x88000000, 0x88880880, 0x88888888, 0x90909090, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x88000000, 0x88880880, 0x88888888, 0x90909090, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x90000000, 0x90909090, 0x90909090, 0x92492492, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x90000000, 0x90909090, 0x90909090, 0x92492492, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x90000000, 0x90909090, 0x90909090, 0x92492492, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0x90000000, 0x90909090, 0x90909090, 0x92492492, 0x92492492, 0x94924924,
    0x00000000, 0x80000000, 0xa0000000, 0xa0a0a0a0, 0xa0a0a0a0, 0xa4a4a4a4, 0xa4a4a4a4, 0xa4a4a4a4,
    0x00000000, 0x80000000, 0xa0000000, 0xa0a0a0a0, 0xa0a0a0a0, 0xa4a4a4a4, 0xa4a4a4a4, 0xa4a4a4a4,
    0x00000000, 0x80000000, 0xa0000000, 0xa0a0a0a0, 0xa0a0a0a0, 0xa4a4a4a4, 0xa4a4a4a4, 0xa4a4a4a4,
    0x00000000, 0x80000000, 0xa0000000, 0xa0a0a0a0, 0xa0a0a0a0, 0xa4a4a4a4, 0xa4a4a4a4, 0xa4a4a4a4,
    0x00000000, 0x80000000, 0xc0000000, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc4c4c4c4,
    0x00000000, 0x80000000, 0xc0000000, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc4c4c4c4,
    0x00000000, 0x80000000, 0xc0000000, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc4c4c4c4,
    0x00000000, 0x80000000, 0xc0000000, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc0c0c0c0, 0xc4c4c4c4
])

def get_euclidean_pattern(steps, pulses):
    """
    Get the Euclidean pattern for a given number of steps and pulses.
    
    :param steps: Number of steps (1-32)
    :param pulses: Number of pulses (0-32)
    :return: 32-bit integer representing the Euclidean pattern
    """
    if steps < 1 or steps > 32 or pulses < 0 or pulses > 32:
        raise ValueError("Invalid steps or pulses value")
    
    index = (steps - 1) * 8 + (pulses * 8 // 32)
    return euclidean_patterns[index]